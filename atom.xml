<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hi</title>
  
  <subtitle>Liu Jian の Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://liujan.top/"/>
  <updated>2019-05-31T07:26:31.168Z</updated>
  <id>https://liujan.top/</id>
  
  <author>
    <name>Liu Jian</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>博客美化篇--看板娘</title>
    <link href="https://liujan.top//posts/78fd139f/"/>
    <id>https://liujan.top//posts/78fd139f/</id>
    <published>2019-05-28T13:15:55.000Z</published>
    <updated>2019-05-31T07:26:31.168Z</updated>
    
    <content type="html"><![CDATA[<p>看到左边的宠物了么 (本来想弄妹子的, 以后有机会再弄吧), 以前看到别人网站上有个看板娘就觉得很好玩, 作为死宅, 这种东西怎么能没有。虽然现在还不理想, 不过有空还是会改进的。老样子, 先炫耀一下。(悄悄感谢 <a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="noopener">大佬</a> )<br><a id="more"></a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>看板娘是一种职业和习惯称呼，也是 ACGN 次文化中的萌属性之一。简而言之就是小店的女服务生，也有吸引顾客，招揽生意，提高人气等作用类似品牌形象代言人的含义。</p><h1 id="开始美化"><a href="#开始美化" class="headerlink" title="开始美化"></a>开始美化</h1><p>这边介绍的只是最基本的, 按照我的步骤也可以做出来, 不过具体的配置还是看大家喜欢。总之先开始搞事情吧 !!!</p><h2 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h2><p>首先你需要安装 Lived 2D 需要的模块 hexo-helper-live2d<br><code>npm install --save hexo-helper-live2d</code></p><h2 id="添加模型"><a href="#添加模型" class="headerlink" title="添加模型"></a>添加模型</h2><p>同样原文介绍了 4 种方式来添加模型, 而我使用的是第三种 通过 <code>npm 模块名</code><br>我以 live2d-widget-model-wanko 模块为例, 当然有更多的<a href="https://github.com/xiazeyu/live2d-widget-models" target="_blank" rel="noopener">模型</a>供你选择</p><h3 id="使用现有的模型"><a href="#使用现有的模型" class="headerlink" title="使用现有的模型"></a>使用现有的模型</h3><p>首先使用 npm install 模型的包名 来下载模型<br><code>npm install live2d-widget-model-wanko</code></p><p>下载完成后修改 _config.yml 文件, 原文说可以修改根目录下的 _config.yml 或主题的 _config.yml, 我修改的是根目录下的_config.yml, 在文件最后添加<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  # enable: false</span><br><span class="line">  scriptFrom: local  # 默认</span><br><span class="line">  pluginRootPath: live2dw/  # 插件在站点上的根目录(相对路径)</span><br><span class="line">  pluginJsPath: lib/  # 脚本文件相对与插件根目录路径</span><br><span class="line">  pluginModelPath: assets/  # 模型文件相对与插件根目录路径</span><br><span class="line">  tagMode: false  # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span><br><span class="line">  debug: false  # 调试, 是否在控制台输出日志</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-wanko  # npm-module package name,下载的模型</span><br><span class="line">  display:</span><br><span class="line">    position: right  # 模型位置</span><br><span class="line">    width: 150  # 宽度</span><br><span class="line">    height: 300  # 高度</span><br><span class="line">  mobile:</span><br><span class="line">    show: true  # 手机显示</span><br><span class="line">  react:</span><br><span class="line">    opacity: 0.7  # 不透明度</span><br></pre></td></tr></tbody></table></figure><p></p><p>原文中有更详细的设置, 当然到这里你就已经可以看到了<br>有点人说不行, 我要自己设计的, 那么下面介绍然后发布自己的模型</p><h3 id="发布自己的模型"><a href="#发布自己的模型" class="headerlink" title="发布自己的模型"></a>发布自己的模型</h3><p>我就拿原来的 wanko 来举例了, 毕竟我也不会建, 当然网上有<br>在博客根目录下新建一个模型包名(live2d-widget-model-xxx)的文件夹, 在文件夹里使用命令<br> <code>npm init</code><br>再在这个文件夹里新建一个名为 assets 子目录, 把你的模型内容放进去<br>接着使用 <code>npm publish</code> 来发布。<br>然后使用 <code>npm install --save live2d-widget-model-wanko</code> 来安装<br>最后你就可以通过向 model.use 键入包名 (live2d-widget-model-wanko) 来使用</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>如果有什么问题, 欢迎大家评论交流提意见。<br>另外转载的文章我也添加了链接，表示对原作者的尊重, 同时也希望大家多多关照。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看到左边的宠物了么 (本来想弄妹子的, 以后有机会再弄吧), 以前看到别人网站上有个看板娘就觉得很好玩, 作为死宅, 这种东西怎么能没有。虽然现在还不理想, 不过有空还是会改进的。老样子, 先炫耀一下。(悄悄感谢 &lt;a href=&quot;https://github.com/EYHN/hexo-helper-live2d&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;大佬&lt;/a&gt; )&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="blog配置" scheme="https://liujan.top/categories/blog%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="Hexo" scheme="https://liujan.top/tags/Hexo/"/>
    
      <category term="Lived 2D" scheme="https://liujan.top/tags/Lived-2D/"/>
    
  </entry>
  
  <entry>
    <title>使用Hexo和GitHub搭建个人博客</title>
    <link href="https://liujan.top//posts/952d432d/"/>
    <id>https://liujan.top//posts/952d432d/</id>
    <published>2019-05-11T11:36:07.000Z</published>
    <updated>2019-05-31T07:24:56.556Z</updated>
    
    <content type="html"><![CDATA[<p>网上已经有许多教程了,我的也差不多。就是想纪念一下我的个人博客,也方便小伙伴们来参考一下,手把手教,有图有文,一步一步,小白也可以做。 <span class="github-emoji" style="color: transparent;background:no-repeat url(https://assets-cdn.github.com/images/icons/emoji/unicode/1f60e.png?v8) center/contain" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f60e.png?v8">😎</span><br><a id="more"></a></p><h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><h2 id="注册GitHub"><a href="#注册GitHub" class="headerlink" title="注册GitHub"></a>注册GitHub</h2><p>首先我们需要注册一个自己的 <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a> ,与一般的注册步骤相同,这里就不作赘述了。<br>注册好后新建一个个人仓库,在右上角有个加号,点一下，选择 <code>new repository</code><br>填写好信息就好,注意 Repository name 要使用 <code>"你的账户名".github.io</code> <span class="github-emoji" style="color: transparent;background:no-repeat url(https://assets-cdn.github.com/images/icons/emoji/unicode/1f60e.png?v8) center/contain" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f60e.png?v8">😎</span></p><h2 id="下载Git"><a href="#下载Git" class="headerlink" title="下载Git"></a>下载Git</h2><p><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git</a> 的操作界面和命令行窗口一样,我们之后的一系列操作都要在这个上面进行。</p><p>下载安装完成后,鼠标右键选择Git Bash,或者在菜单里搜索Git Bash,我们需要进行user.name和user.email信息配置：<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name "你的GitHub用户名"</span><br><span class="line">git config --global user.email "你的GitHub注册邮箱"</span><br></pre></td></tr></tbody></table></figure><p></p><p><img src="http://ws2.sinaimg.cn/large/006zTujZly1g310zmpc80j30a7026q2u.jpg" alt="信息配置"></p><p>生成ssh密钥文件：<br><code>ssh-keygen -t rsa -C "你的GitHub注册邮箱"</code><br>然后直接三个回车即可,默认不需要设置密码,当然你也可以设置。<br><img src="http://ws1.sinaimg.cn/large/006zTujZly1g3110nyqznj30de0a9mxe.jpg" alt="生成ssh密钥"></p><p>打开你的GitHub,点击头像旁边的倒三角,点击Settings,找到SHH and GPS keys,新建SSH keys<br><img src="http://ws4.sinaimg.cn/large/006zTujZly1g3111b2xrlj30rs0bp3z0.jpg" alt="新建SSH"></p><p>Title随便写,找到本地生成的.ssh的文件夹中的id_rsa.pub密钥（上一步有地址）,将内容全部复制进Key,然后Add SHH Key。</p><p>我们可以在 Git Bash 中检测 GitHub 公钥设置是否成功,输入：<br><code>ssh git@github.com</code><br><img src="http://ws3.sinaimg.cn/large/006zTujZly1g3115fko8uj30fr02rglm.jpg" alt="检测"><br>看到 successfully 了么 <span class="github-emoji" style="color: transparent;background:no-repeat url(https://assets-cdn.github.com/images/icons/emoji/unicode/1f60e.png?v8) center/contain" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f60e.png?v8">😎</span></p><p>设置GitHub密钥,通过非对称加密的公钥与私钥来完成加密,公钥放置在GitHub上,私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户,所以每次推送都需要输入账号密码验证推送用户是否是合法用户,为了省去每次输入密码的步骤,采用了ssh,当你推送的时候,git就会匹配你的私钥跟GitHub上面的公钥是否是配对的,若是匹配就认为你是合法用户,则允许推送。这样可以保证每次的推送都是正确合法的。 <span class="github-emoji" style="color: transparent;background:no-repeat url(https://assets-cdn.github.com/images/icons/emoji/unicode/1f60e.png?v8) center/contain" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f60e.png?v8">😎</span></p><h2 id="下载Node"><a href="#下载Node" class="headerlink" title="下载Node"></a>下载Node</h2><p>安装 <a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Node</a> 会包含环境变量及npm的安装,他是自动配的,没配好的话,就自己手动配。<br>安装后,检测Node.js是否安装成功,在命令行中输入:<br><code>node -v</code><br>检测npm是否安装成功,在命令行中输入:<br><code>npm -v</code><br><img src="http://ws3.sinaimg.cn/large/006zTujZly1g314znjb13j304303eweb.jpg" alt="检测3"><br>到这了,安装Hexo的环境已经全部搭建完成。 <span class="github-emoji" style="color: transparent;background:no-repeat url(https://assets-cdn.github.com/images/icons/emoji/unicode/1f60e.png?v8) center/contain" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f60e.png?v8">😎</span></p><h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><p>Hexo就是我们的个人博客网站的框架,这里需要自己在电脑里创建一个文件夹,比如我在H盘中建了个blog的文件夹,Hexo框架与以后你自己发布的网页,搜友东西都在这个文件夹中。创建好后,在命令行中进入该文件夹,使用npm命令安装Hexo,输入：<br><code>npm install -g hexo-cli</code><br><img src="http://ws1.sinaimg.cn/large/006zTujZly1g3150a804aj30g304raaa.jpg" alt="安装"><br>【有警告是因为你的系统是Windows系统,所以可以忽略这个警告,对你没什么影响的。fsevent是系统的,你是在win下使用了,所以会有警告,忽略即可！】</p><p>这个安装时间较长耐心等待！<br>安装完成后,初始化我们的博客,输入：<br><code>hexo init</code></p><p>这时候我们就可以检测我们的网站雏形,输入：<br><code>hexo s</code><br><img src="http://ws3.sinaimg.cn/large/006zTujZly1g31179ofylj30e101qt8l.jpg" alt="雏形"></p><p>这样就可以在本地浏览器中输入 <code>localhost:4000</code> 看了。<br>到此,你的博客就基本上完成了,当然仅限在本地浏览。 <span class="github-emoji" style="color: transparent;background:no-repeat url(https://assets-cdn.github.com/images/icons/emoji/unicode/1f60e.png?v8) center/contain" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f60e.png?v8">😎</span><br><img src="http://ws4.sinaimg.cn/large/006zTujZly1g3150qomkxj311y0lcdt5.jpg" alt="浏览"></p><h2 id="关联Hexo与GitHub"><a href="#关联Hexo与GitHub" class="headerlink" title="关联Hexo与GitHub"></a>关联Hexo与GitHub</h2><p>接下来,将我们的Hexo与GitHub关联起来,打开新建的blog文件夹下的_config.yml,翻到最后修改为：<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">type: git</span><br><span class="line">repo: 这里填入你之前在GitHub上创建仓库的完整路径,记得加上 .git</span><br><span class="line">branch: master</span><br></pre></td></tr></tbody></table></figure><p></p><p><img src="http://wx1.sinaimg.cn/large/006zTujZly1g3118hriucj30hx0253ye.jpg" alt="关联"><br>我这里是用notepad打开的,【注意加空格,之前没加部署不上】</p><p>最后安装Git部署插件，输入命令：<br><code>npm install hexo-deployer-git –save</code><br><img src="http://ws4.sinaimg.cn/large/006zTujZly1g3118xk0naj30gy02ejri.jpg" alt="部署插件"></p><p>警告没事,或者你可以到Hexo官网上下载插件到本地<br>这时，我们分别输入三条命令：<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g </span><br><span class="line">hexo d</span><br></pre></td></tr></tbody></table></figure><p></p><p>这样你就可以访问 <code>"你的仓库名".github.io</code> 来访问你的 blog 了 总结一下使用的命令吧:</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g #安装Hexo</span><br><span class="line">hexo init #初始化博客</span><br><span class="line">hexo clean #清除缓存，若是网页正常情况下可以忽略这条命令</span><br><span class="line">hexo g == hexo generate #生成</span><br><span class="line">hexo s == hexo server #启动服务预览</span><br><span class="line">hexo d == hexo deploy #部署</span><br></pre></td></tr></tbody></table></figure><p>一些不常用的可以到<a href="https://hexo.io/zh-cn/docs/commands" target="_blank" rel="noopener">官网</a>上查看 <span class="github-emoji" style="color: transparent;background:no-repeat url(https://assets-cdn.github.com/images/icons/emoji/unicode/1f60e.png?v8) center/contain" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f60e.png?v8">😎</span></p><h1 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h1><p>我们先讲更换主题吧,毕竟也简单的，域名什么的也不急一时。我们先进入 Hexo<a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题</a>页面,挑选喜欢的主题。<br>选择完成输入输入 <code>git clone 主题的GitHub地址.git themes/主题名</code> ,如<br><code>git clone https://github.com/ZEROKISEKI/hexo-theme-cube.git themes/cube</code><br><img src="http://wx4.sinaimg.cn/large/006zTujZly1g3119ozth5j30kc03e3yp.jpg" alt="下载"></p><p>之后我们要修改配置文件,修改位于博客根目录下的 <code>_config.yml</code> （站点配置文件：/blog/_config.yml）内的 <code>theme:</code> 选项值为主题名<br><img src="http://ws4.sinaimg.cn/large/006zTujZly1g311a5flapj30c502dmx1.jpg" alt="修改配置"></p><p>这样就好了,当然还有一些配置需要修改,这就要看你主题的GitHub上具体怎么说了,上面也有教程教你怎么下载和修改,包括插件、主题的 <code>_config.yml</code> （主题配置文件,themes/cube/_config.yml）修改什么的,这就要看具体情况了。 <span class="github-emoji" style="color: transparent;background:no-repeat url(https://assets-cdn.github.com/images/icons/emoji/unicode/1f60e.png?v8) center/contain" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f60e.png?v8">😎</span></p><h1 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h1><p>到域名注册商处创建一个域名，我用的是 <a href="https://www.aliyun.com/" target="_blank" rel="noopener">阿里云</a> ,当然你也可以使用其他的<a href="https://cloud.tencent.com/" target="_blank" rel="noopener">腾讯云</a>,<a href="https://cloud.baidu.com/" target="_blank" rel="noopener">百度云</a>,<a href="https://activity.huaweicloud.com/promotion/index.html" target="_blank" rel="noopener">华为云</a>等。</p><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>我用的阿里云,那就以阿里云为例,其他的域名注册商的操作也差不多。<br>登录阿里云–>控制台–>解析,<br><img src="http://ws1.sinaimg.cn/large/006zTujZly1g311aq3ve3j31190cktac.jpg" alt="控制台"></p><p>选择新手引导,记录值填写你的IPv4地址,通过Ping来获取，<br><code>ping "你的仓库名".github.io"</code><br><img src="http://ws1.sinaimg.cn/large/006zTujZly1g311do1ljtj30id0cwq38.jpg" alt="新手引导"></p><p>或者你可以手动添加,选择添加记录就行了,记录值还是你的IPv4地址,效果和上面一样的。<br><img src="http://wx2.sinaimg.cn/large/006zTujZly1g311b8oecgj30gd03l745.jpg" alt="手动记录"></p><h2 id="开始绑定"><a href="#开始绑定" class="headerlink" title="开始绑定"></a>开始绑定</h2><p>打开你的仓库–>Settings–>下拉找到GitHub Pages–>在 Custom domain 中填入你的域名–>save<br><img src="http://ws3.sinaimg.cn/large/006zTujZly1g311bgh9tgj30ji0gkwfe.jpg" alt="Custom domain"></p><p>然后进入本地博客文件夹,在blog/source目录下，创建一个 CNAME.txt 的文本文档，输入你的域名,保存,出来后切记把文件名的 .txt 后缀名删了<br>（不截图了, 懒）,然后三步走。<br></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g </span><br><span class="line">hexo d</span><br></pre></td></tr></tbody></table></figure><p></p><p>做完后就大功告成了,恭喜你！！！ <span class="github-emoji" style="color: transparent;background:no-repeat url(https://assets-cdn.github.com/images/icons/emoji/unicode/1f60e.png?v8) center/contain" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f60e.png?v8">😎</span></p><h1 id="编写文章"><a href="#编写文章" class="headerlink" title="编写文章"></a>编写文章</h1><p>通过 <code>hexo n "name"</code> 来新建文章,然后就在本地中修改,<br>具体怎么写文章我就不说了吧,网上有教程,就是添加一些符号,还是简单的,官网上也可以参考一下。</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>第一次建博客,花了几天的时间,出现过一些状况,然后各种找原因,借鉴他人,不过好在完成了,真正建好后就感觉其实挺简单。希望大家能够采纳,打字不容易。 <span class="github-emoji" style="color: transparent;background:no-repeat url(https://assets-cdn.github.com/images/icons/emoji/unicode/1f60e.png?v8) center/contain" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f60e.png?v8">😎</span></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;网上已经有许多教程了,我的也差不多。就是想纪念一下我的个人博客,也方便小伙伴们来参考一下,手把手教,有图有文,一步一步,小白也可以做。 &lt;span class=&quot;github-emoji&quot; style=&quot;color: transparent;background:no-repeat url(https://assets-cdn.github.com/images/icons/emoji/unicode/1f60e.png?v8) center/contain&quot; data-src=&quot;https://assets-cdn.github.com/images/icons/emoji/unicode/1f60e.png?v8&quot;&gt;😎&lt;/span&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="blog配置" scheme="https://liujan.top/categories/blog%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="Hexo" scheme="https://liujan.top/tags/Hexo/"/>
    
      <category term="blog" scheme="https://liujan.top/tags/blog/"/>
    
  </entry>
  
</feed>
