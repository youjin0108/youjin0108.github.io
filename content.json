[{"title":"使用Hexo和GitHub搭建个人博客","date":"2019-05-11T11:36:07.000Z","path":"/posts/952d432d/","text":"前言网上已经有许多教程了,我的也差不多。就是想纪念一下我的个人博客,也方便小伙伴们来参考一下,手把手教,有图有文,一步一步,小白也可以做。 😎 环境准备注册GitHub首先我们需要注册一个自己的 GitHub ,与一般的注册步骤相同,这里就不作赘述了。注册好后新建一个个人仓库,在右上角有个加号,点一下，选择 new repository填写好信息就好,注意 Repository name 要使用 \"你的账户名\".github.io😎 下载GitGit 的操作界面和命令行窗口一样,我们之后的一系列操作都要在这个上面进行。 下载安装完成后,鼠标右键选择Git Bash,或者在菜单里搜索Git Bash,我们需要进行user.name和user.email信息配置：12git config --global user.name \"你的GitHub用户名\"git config --global user.email \"你的GitHub注册邮箱\" 生成ssh密钥文件：ssh-keygen -t rsa -C \"你的GitHub注册邮箱\"然后直接三个回车即可,默认不需要设置密码,当然你也可以设置。 打开你的GitHub,点击头像旁边的倒三角,点击Settings,找到SHH and GPS keys,新建SSH keysTitle随便写,找到本地生成的.ssh的文件夹中的id_rsa.pub密钥（上一步有地址）,将内容全部复制进Key,然后Add SHH Key。 我们可以在 Git Bash 中检测 GitHub 公钥设置是否成功,输入：ssh git@github.com看到 successfully 了么 😎 设置GitHub密钥,通过非对称加密的公钥与私钥来完成加密,公钥放置在GitHub上,私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户,所以每次推送都需要输入账号密码验证推送用户是否是合法用户,为了省去每次输入密码的步骤,采用了ssh,当你推送的时候,git就会匹配你的私钥跟GitHub上面的公钥是否是配对的,若是匹配就认为你是合法用户,则允许推送。这样可以保证每次的推送都是正确合法的。 下载Node安装 Node 会包含环境变量及npm的安装安装后,检测Node.js是否安装成功,在命令行中输入:node -v检测npm是否安装成功,在命令行中输入:npm -v到这了,安装Hexo的环境已经全部搭建完成。😎 安装HexoHexo就是我们的个人博客网站的框架,这里需要自己在电脑里创建一个文件夹,比如我在H盘中建了个blog的文件夹,Hexo框架与以后你自己发布的网页,搜友东西都在这个文件夹中。创建好后,在命令行中进入该文件夹,使用npm命令安装Hexo,输入：npm install -g hexo-cli【有警告是因为你的系统是Windows系统,所以可以忽略这个警告,对你没什么影响的。fsevent是系统的,你是在win下使用了,所以会有警告,忽略即可！】 这个安装时间较长耐心等待！安装完成后,初始化我们的博客,输入：hexo init 这时候我们就可以检测我们的网站雏形,输入：hexo s 这样就可以在本地浏览器中输入 localhost:4000 看了。到此,你的博客就基本上完成了,当然仅限在本地浏览。😎 接下来,将我们的Hexo与GitHub关联起来,打开新建的blog文件夹下的_config.yml,翻到最后修改为：1234deploy: type: git repo: 这里填入你之前在GitHub上创建仓库的完整路径,记得加上 .git branch: master 我这里是有notepad打开的,【注意加空格,之前没加部署不上】 最后安装Git部署插件，输入命令：npm install hexo-deployer-git –save 警告没事。或者你可以到Hexo官网上下载插件到本地这时，我们分别输入三条命令：123hexo clean hexo g hexo d 这样你就可以访问 \"你的仓库名\".github.io 来访问你的 blog 了 😎总结一下使用的命令吧: 123456npm install hexo -g #安装Hexohexo init #初始化博客hexo clean #清除缓存，若是网页正常情况下可以忽略这条命令hexo g == hexo generate #生成hexo s == hexo server #启动服务预览hexo d == hexo deploy #部署 累了,剩下的和图片一会再写。 更换主题我们先讲更换主题吧,毕竟也简单的，域名什么的也不急一时。我们先进入 Hexo主题页面,挑选喜欢的主题。选择完成输入输入 git clone 主题的GitHub地址.git themes/主题名 ,如git clone https://github.com/ZEROKISEKI/hexo-theme-cube.git themes/cube 之后我们要修改配置文件,修改位于博客根目录下的 _config.yml （站点配置文件：/blog/_config.yml）内的 theme: 选项值为主题名 这样就好了,当然还有一些配置需要修改,这就要看你主题的GitHub上具体怎么说了,上面也有教程教你怎么下载和修改,包括插件、主题的 _config.yml （主题配置文件,themes/cube/_config.yml）修改什么的,这就要看具体情况了。 😎 绑定域名编写文章为域名使用https document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://liujan.top/tags/Hexo/"}]},{"title":"Hello World","date":"2019-05-08T05:54:46.874Z","path":"/posts/16107/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]}]